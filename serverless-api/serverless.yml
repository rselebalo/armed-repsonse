# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: armedResponse-api # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  authorizerFunc:
    handler: src/functions/authorizerFunc.authorize
  registerClient:
    handler: functions/registerClient.handler
    name: ArmedResponse_registerClient
    events:
      - http:
          path: registerClient
          method: post          
          authorizer: authorizerFunc
          cors: 
            allow: "*"  
  createPanic:
    handler: src/functions/createPanic.handler
    name: ArmedResponse_createPanic
    events:
      - http:
          path: create
          method: post          
          authorizer: authorizerFunc
          cors: 
            allow: "*"
  getPanicById:
    handler: src/functions/getPanicById.handler
    name: ArmedResponse_getPanicById
    events:
      - http:
          path: panic/{id}
          method: get
          cors: true
          authorizer: authorizerFunc 
  getAllPanics:
    handler: src/functions/getAllPanics.handler
    name: ArmedResponse_getAllPanics
    events:
      - http:
          path: getAllPanics
          method: get
          cors: true
          authorizer: authorizerFunc         
  updatePanic:
    handler: src/functions/updatePanic.handler
    name: ArmedResponse_updatePanic
    events:
      - http:
          path: updatePanic/{id}
          method: patch
          cors: true
          authorizer: authorizerFunc 
  searchPanic:
    handler: src/functions/searchPanic.handler
    name: ArmedResponse_searchPanic
    events:
      - http:
          path: searchPanic/{searchTerm}
          method: get
          cors: true
          authorizer: authorizerFunc         
plugins:
  - serverless-offline
